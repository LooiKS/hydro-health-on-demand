{"version":3,"sources":["images/favicon.png","Home.js","Horseshoe.js","Monitor.js","TextBorder.js","HomeComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Map","ReactMapboxGl","accessToken","Horseshoe","Component","console","log","this","props","num","className","id","value","unit","style","WebkitTransform","right_degree","transform","left_degree","marker_degree","param","Monitor","state","isLoading","response","values","conductivity","marker","left","right","oldValue","oxygen","tds","turbidity","ph","temperature","get_xpand","calculatedPercent","leftDeg","Math","abs","round","rightDeg","parameter","mode","fetch","headers","then","json","result","xpandGetJWT","access_token","data","method","body","JSON","stringify","xpandGetData","jwt","baseURL","temp","changeProgressDial","setState","TextBorder","border","borderColor","color","textColor","margin","text","count","center","zoom","HomeComp","routeHistory","useHistory","useState","location","lat","lon","name","type","popup","setPopup","safeCount","pollutedCount","extremelyPollutedCount","useEffect","column","width","title","fontFamily","fontSize","textAlign","paddingLeft","display","containerStyle","height","onClick","map","e","lngLat","coordinates","offset","bottom","dangerouslySetInnerHTML","__html","description","layer","forEach","element","push","properties","anchor","mapWithEvt","onMouseEnter","onMouseLeave","zIndex","backgroundColor","borderRadius","createLayer","App","justifyContent","position","flexWrap","alignItems","padding","src","logo","alt","to","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40f0517a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.942e51a6.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\n// ES6\r\nimport ReactMapboxGl, { Layer, Feature, Popup, Marker } from \"react-mapbox-gl\";\r\n\r\n// ES5\r\n// var ReactMapboxGl = require('react-mapbox-gl');\r\n// var Layer = ReactMapboxGl.Layer;\r\n// var Feature = ReactMapboxGl.Feature;\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoibG9vaWtpYW5zZW5nIiwiYSI6ImNqdWF3MzFrMzA2bmYzeXBkMGdkMTdsM2sifQ.SMkjjzrxv1Gwmf127YmGpA\"\r\n});\r\n\r\nconst markerUrl = \"logo.svg\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    location: [\r\n      {\r\n        lat: 3.172788,\r\n        lon: 101.719556,\r\n        name: \"5G Ericsson KL\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"\",\r\n        response: []\r\n        // marker: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"color\")\"marker\",\r\n        // text: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 1.555145,\r\n        lon: 103.63764,\r\n        name: \"UTM JB Lake\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 1.460468,\r\n        lon: 103.940487,\r\n        name: \"Sungai Kim Kim\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(0, \"color\")\"marker\",\r\n        // text: indicate(0, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 3.828111,\r\n        lon: 103.265507,\r\n        name: \"Sungai Tiram\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(30, \"color\")\"marker\",\r\n        // text: indicate(30, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 2.892086,\r\n        lon: 101.68903,\r\n        name: \"Sungai Langat\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(30, \"color\")\"marker\",\r\n        // text: indicate(30, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 3.496129,\r\n        lon: 102.912493,\r\n        name: \"Sungai Pahang\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Extremely Polluted\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 2.235268,\r\n        lon: 102.256568,\r\n        name: \"Sungai Malacca\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Polluted\"\r\n        // marker: indicate(0, \"color\")\"marker\",\r\n        // text: indicate(0, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 4.370342,\r\n        lon: 101.072384,\r\n        name: \"Sungai Kinta\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Polluted\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      }\r\n    ],\r\n    gotPopUp: false,\r\n    popupText: \"\",\r\n    response: [],\r\n    isLoading: true\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.get_xpand();\r\n  }\r\n\r\n  createLayer = () => {\r\n    let routeHistory = useHistory();\r\n\r\n    let layer = [];\r\n    let color = \"\";\r\n    this.state.location.forEach(element => {\r\n      console.log(element.state);\r\n\r\n      if (element.state === \"Safe\") {\r\n        color = \"blue\";\r\n      } else if (element.state === \"Polluted\") {\r\n        color = \"green\";\r\n      } else {\r\n        color = \"red\";\r\n      }\r\n\r\n      console.log(color);\r\n      layer.push(\r\n        // <Feature\r\n        //   coordinates={[element.lon, element.lat]}\r\n        //   properties={{\r\n        //     description: \"<strong>\" + element.name + \"</strong>\"\r\n        //   }}\r\n        //   onClick={() => console.log(this)}\r\n        //   onMouseEnter={mapWithEvt => {\r\n        //     console.log(\r\n        //       \"mouse enter\",\r\n        //       mapWithEvt.feature.properties.description\r\n        //     );\r\n        //     this.setState({\r\n        //       gotPopUp: {\r\n        //         lat: element.lat,\r\n        //         lon: element.lon,\r\n        //         description: mapWithEvt.feature.properties.description\r\n        //       },\r\n        //       popupText: mapWithEvt.feature.properties.properties\r\n        //     });\r\n        //   }}\r\n        //   onMouseLeave={mapWithEvt => {\r\n        //     console.log(\"mouse leave\", mapWithEvt);\r\n        //     this.setState({\r\n        //       gotPopUp: false\r\n        //     });\r\n        //   }}\r\n        // />\r\n        // <Route\r\n        //   key={element.name}\r\n        //   render={({ history }) => (\r\n        <Marker\r\n          properties={{\r\n            description: \"<strong>\" + element.name + \"</strong>\"\r\n          }}\r\n          coordinates={[element.lon, element.lat]}\r\n          anchor=\"bottom\"\r\n          onClick={mapWithEvt => {\r\n            console.log(\"mouse click\", mapWithEvt);\r\n            // routeHistory.push(\"/monitor\");\r\n          }}\r\n          onMouseEnter={mapWithEvt => {\r\n            console.log(\"mouse enter\", mapWithEvt);\r\n            this.setState({\r\n              gotPopUp: {\r\n                lat: element.lat,\r\n                lon: element.lon,\r\n                description: \"<strong>\" + element.name + \"</strong>\"\r\n              }\r\n            });\r\n          }}\r\n          onMouseLeave={mapWithEvt => {\r\n            console.log(\"mouse leave\", mapWithEvt);\r\n            this.setState({\r\n              gotPopUp: false\r\n            });\r\n          }}\r\n        >\r\n          {/* <img src={markerUrl} /> */}\r\n          {/* condition = {element.state === \"Safe\"}; */}\r\n\r\n          <div\r\n            style={{\r\n              width: 1 + \"em\",\r\n              height: 1 + \"em\",\r\n              backgroundColor: color,\r\n\r\n              borderRadius: 50 + \"%\"\r\n            }}\r\n          >\r\n            {color}\r\n          </div>\r\n        </Marker>\r\n        // )}\r\n        // />\r\n      );\r\n    });\r\n    console.log(layer);\r\n    return layer;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>HOME</h2>\r\n        <Map\r\n          style=\"mapbox://styles/mapbox/streets-v9\"\r\n          containerStyle={{\r\n            height: \"100vh\",\r\n            width: \"100vw\"\r\n          }}\r\n          center={{ lat: 3.172788, lng: 101.719556 }}\r\n          onClick={(map, e) => console.log(\"onClickMap!\", e.lngLat)}\r\n        >\r\n          {/* <Layer type=\"symbol\" layout={{ \"icon-image\": \"circle-15\" }}></Layer> */}\r\n          {this.state.gotPopUp ? (\r\n            <Popup\r\n              coordinates={[this.state.gotPopUp.lon, this.state.gotPopUp.lat]}\r\n              offset={{\r\n                \"bottom-left\": [12, 0],\r\n                bottom: [0, -10],\r\n                \"bottom-right\": [-12, -38]\r\n              }}\r\n            >\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: this.state.gotPopUp.description\r\n                }}\r\n              />\r\n            </Popup>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.createLayer()}\r\n\r\n          {/* <Layer\r\n            // key={element.name}\r\n            type=\"symbol\"\r\n            id=\"marker\"\r\n            layout={{ \"icon-image\": \"circle-15\" }}\r\n          >\r\n            {this.createLayer()}\r\n          </Layer>\r\n          <Layer\r\n            // key={element.name}\r\n            type=\"symbol\"\r\n            id=\"marker\"\r\n            layout={{ \"icon-image\": \"aquarium-15\" }}\r\n          >\r\n            <Feature coordinates={[102, 5]} />\r\n          </Layer> */}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get_xpand(parameter, mode) {\r\n    fetch(\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/applicationmgt/authenticate\",\r\n      {\r\n        headers: {\r\n          \"X-Secret\":\r\n            \"UmNvalVjX09Td2JtY0NHTE9ST3AyNFdpbUdrYTpyTXRQaVNOVzNsTEhHaEREWDZSbFRmYjM0bVVh\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.xpandGetJWT(result.access_token, parameter, mode);\r\n      });\r\n  }\r\n\r\n  xpandGetJWT(accessToken, parameter, mode, data) {\r\n    fetch(\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/usermgt/v1/authenticate\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer\" + \" \" + accessToken\r\n        },\r\n        body: JSON.stringify({\r\n          username: \"utmgroup02@noreply.com\",\r\n          password: \"teamh2o\"\r\n        })\r\n      }\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.xpandGetData(result[\"X-IoT-JWT\"], accessToken, parameter, data);\r\n      });\r\n  }\r\n\r\n  xpandGetData(jwt, accessToken, parameter, data) {\r\n    var baseURL =\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/datamgt/v1/user/devicehistory?\";\r\n    var eventName = \"Try\";\r\n    var deviceIds = \"16492\";\r\n    var noOfEvents = \"7\";\r\n    var zoneId = \"Asia%2FKuala_Lumpur\";\r\n    // var startDate = '2018-08-09%2012%3A00%3A00'\r\n    fetch(\r\n      baseURL +\r\n        \"eventName=\" +\r\n        eventName +\r\n        \"&deviceIds=\" +\r\n        deviceIds +\r\n        \"&noOfEvents=\" +\r\n        noOfEvents +\r\n        \"&zoneId=\" +\r\n        zoneId,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer\" + \" \" + accessToken,\r\n          \"X-IoT-JWT\": jwt\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(result => {\r\n        console.log(\"result: \", result[deviceIds]);\r\n        this.setState({\r\n          response: result[deviceIds],\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Horseshoe extends Component {\r\n  componentWillMount() {\r\n    console.log(this.props.num);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          \"param_\" + (this.props.num < 4 ? \"upper\" : \"lower\") + \"_column\"\r\n        }\r\n      >\r\n        <div className=\"horseshoe_upper_wrapper\">\r\n          <div className=\"horseshoe\">\r\n            <div className=\"radial-wrapper\">\r\n              <h1\r\n                className={\"param_value unit_value\" + this.props.num}\r\n                id=\"text1\"\r\n              >\r\n                {this.props.value}\r\n              </h1>\r\n              <h1 className={\"param_unit unit_value\" + this.props.num}>\r\n                {this.props.unit}\r\n              </h1>\r\n              <div className=\"radial-section radial-right-section\">\r\n                <div className={\"wedge\" + this.props.num}></div>\r\n              </div>\r\n              <div className=\"radial-section radial-left-section\">\r\n                <div className={\"wedge\" + this.props.num}></div>\r\n              </div>\r\n              <div className={\"marker\" + this.props.num + \" start\"}></div>\r\n              <div className={\"marker\" + this.props.num + \" end\"}></div>\r\n            </div>\r\n\r\n            <div className=\"radial-wrapper radial-progress-wrapper\">\r\n              <div className=\"radial-section radial-right-section\">\r\n                <div\r\n                  className={\"wedge\" + this.props.num}\r\n                  id=\"right1\"\r\n                  style={{\r\n                    WebkitTransform:\r\n                      \"rotateZ(\" + this.props.right_degree + \"deg)\",\r\n                    transform: \"rotateZ(\" + this.props.right_degree + \"deg)\"\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"radial-section radial-left-section\">\r\n                <div\r\n                  className={\"wedge\" + this.props.num}\r\n                  id=\"left1\"\r\n                  style={{\r\n                    WebkitTransform:\r\n                      \"rotateZ(\" + this.props.left_degree + \"deg)\",\r\n                    transform: \"rotateZ(\" + this.props.left_degree + \"deg)\"\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className={\"marker\" + this.props.num + \" start\"}></div>\r\n              <div\r\n                className={\"marker\" + this.props.num + \" end\"}\r\n                id=\"marker1\"\r\n                style={{\r\n                  WebkitTransform:\r\n                    \"rotateZ(\" + this.props.marker_degree + \"deg)\",\r\n                  transform: \"rotateZ(\" + this.props.marker_degree + \"deg)\"\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          <h1 className=\"param_title\">{this.props.param}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Horseshoe;\r\n","import React, { Component } from 'react';\r\nimport Horseshoe from './Horseshoe';\r\n\r\n// const parameter = ['conductivity', 'oxygen', 'tds', 'turbidity', 'ph', 'temperature'];\r\n\r\nclass Monitor extends Component {\r\n\tstate={\r\n\t\tparam : ['Conductivity', 'Dissolved Oxygen', 'Total Dissolved Solids', 'Turbidity', 'pH', 'Temperature'],\r\n\t    unit : ['μS', 'mg/L', 'mg/L' , 'NTU', '' , '℃'],\r\n\t    isLoading: true,\r\n\t    response: []\r\n\t  //   {\r\n\t\t\t// conductivity: \"0.0\",\r\n\t\t\t// mac_s: \"3426465185477481\",\r\n\t\t\t// oxygen: \"8.8\",\r\n\t\t\t// ph: \"7.4\",\r\n\t\t\t// stateName_s: \"<none>\",\r\n\t\t\t// tds: \"26.7\",\r\n\t\t\t// temperature: \"29.6\",\r\n\t\t\t// time_s: \"2019-09-11T00:22:07.788\",\r\n\t\t\t// timestamp_s: \"1568132527788\",\r\n\t\t\t// turbidity: \"10.0\",\r\n\t\t\t// wqi: \"48.3\"\r\n\t  //   }\r\n\t  ,\r\n\t    values:{\r\n\t    \tconductivity: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    \toxygen: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    \ttds: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    \tturbidity: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    \tph: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    \ttemperature: {\r\n\t    \t\tmarker: 0,\r\n\t    \t\tleft: 0,\r\n\t    \t\tright: 0,\r\n\t    \t\toldValue: 50\r\n\t    \t},\r\n\t    }\r\n\t};\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\r\n\t\t// var value = [];\r\n\t\t// var parameter = ['conductivity', 'oxygen', 'tds', 'turbidity', 'ph', 'temperature'];\r\n\t\t\r\n\t\tthis.get_xpand();\r\n\t\t// fetch(\"http://localhost:3001/xpand\")\r\n\t\t// .then(response=>response.json())\r\n\t\t// .then(result=>{\r\n\t\t// \tconsole.log(\"got it\", result);\r\n\t\t// });\r\n\r\n \r\n\t\t // $.ajax({\r\n\t\t //      type:'get',\r\n\t\t //      url:'/xpand',\r\n\t\t //      cache:false,\r\n\t\t //      async:'asynchronous',\r\n\t\t //      dataType:'json',\r\n\t\t //      success: function(data) {\r\n\t\t //        console.log(JSON.stringify(data))\r\n\t\t //      },\r\n\t\t //      error: function(request, status, error) {\r\n\t\t //        console.log(\"Error: \" + error)\r\n\t\t //      }\r\n\t\t //   });\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t// var value[];\r\n\t\t\r\n\t\tif(this.state.isLoading){\r\n\t\t\treturn (<div>Loading Data</div>);\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"monitor_status_bar\">\r\n\t\t\t\t\t\t<h2 className=\"page-header\">Monitor Parameter Value</h2>\r\n\t\t\t\t\t\t<div className=\"upper_status_bar\">\r\n\t\t\t\t\t\t\t<Horseshoe num=\"1\" param={this.state.param[0]} unit={this.state.unit[0]} value={this.state.response[0].conductivity} marker_degree={this.state.values.conductivity.marker} left_degree={this.state.values.conductivity.left} right_degree={this.state.values.conductivity.right}/>\r\n\t\t\t\t\t\t\t<Horseshoe num=\"2\" param={this.state.param[1]} unit={this.state.unit[1]} value={this.state.response[0].oxygen} marker_degree={this.state.values.oxygen.marker} left_degree={this.state.values.oxygen.left} right_degree={this.state.values.oxygen.right}/>\r\n\t\t\t\t\t\t\t<Horseshoe num=\"3\" param={this.state.param[2]} unit={this.state.unit[2]} value={this.state.response[0].tds} marker_degree={this.state.values.tds.marker} left_degree={this.state.values.tds.left} right_degree={this.state.values.tds.right}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"lower_status_bar\">\r\n\t\t\t\t\t\t\t<Horseshoe num=\"4\" param={this.state.param[3]} unit={this.state.unit[3]} value={this.state.response[0].turbidity} marker_degree={this.state.values.turbidity.marker} left_degree={this.state.values.turbidity.left} right_degree={this.state.values.turbidity.right}/>\r\n\t\t\t\t\t\t\t<Horseshoe num=\"5\" param={this.state.param[4]} unit={this.state.unit[4]} value={this.state.response[0].ph} marker_degree={this.state.values.ph.marker} left_degree={this.state.values.ph.left} right_degree={this.state.values.ph.right}/>\r\n\t\t\t\t\t\t\t<Horseshoe num=\"6\" param={this.state.param[5]} unit={this.state.unit[5]} value={this.state.response[0].temperature} marker_degree={this.state.values.temperature.marker} left_degree={this.state.values.temperature.left} right_degree={this.state.values.temperature.right}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tchangeProgressDial(value, calculatedPercent) {\r\n\t\tif(calculatedPercent <= 66) {\r\n\t\t\t// Ensure the right side is hidden\r\n\t\t\tvalue.right = -181;\r\n\t\t\tif(value.oldValue > 66) {\r\n\t\t\t\tvalue.right = -181;\r\n\t\t\t\tvalue.marker = 0;\r\n\t\t\t}\r\n\t\t\tvar leftDeg = -Math.abs(180 - Math.round(2.7 * calculatedPercent));\r\n\t\t\t// var threshold = oldValue > 66 ? 67 : oldValue;\r\n\t\t\tvalue.left = leftDeg + 1;\r\n\t\t\tvalue.marker = leftDeg;\r\n\t\t} else {\r\n\t\t\t// See if LHS needs to change\r\n\t\t\tif (value.oldValue <= 66) {\r\n\t\t\t\tvalue.left = 0;\r\n\t\t\t\tvalue.marker = 0;\r\n\t\t\t}\r\n\t\t\tvar rightDeg = -90 - ((100 - calculatedPercent) * 2.7);\r\n\t\t\tvalue.right = rightDeg;\r\n\t\t\tvalue.marker = (180 + rightDeg);\r\n\t\t}\r\n\t\tvalue.oldValue = calculatedPercent;\r\n\t\treturn value;\r\n\t}\r\n\r\n\tget_xpand(parameter, mode){\r\n\t\tfetch('https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/applicationmgt/authenticate',\r\n\t\t{\r\n\t\t   headers:{ \r\n\t\t     'X-Secret': 'UmNvalVjX09Td2JtY0NHTE9ST3AyNFdpbUdrYTpyTXRQaVNOVzNsTEhHaEREWDZSbFRmYjM0bVVh',\r\n\t\t     'Content-Type': 'application/json' \r\n\t\t \t}\r\n    \t})\r\n    \t.then(response=>response.json())\r\n    \t.then(result => {\r\n    \t\tthis.xpandGetJWT(result.access_token, parameter, mode);\r\n    \t});\r\n\t}\r\n\r\n\txpandGetJWT(accessToken, parameter, mode, data){\r\n\t\tfetch('https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/usermgt/v1/authenticate',\r\n\t\t{\r\n\t\t  method: 'POST',\r\n\t\t  headers: {\r\n\t\t    'Accept': 'application/json',\r\n\t\t    'Content-Type': 'application/json',\r\n        \t'Authorization': 'Bearer' + ' ' + accessToken\r\n\t\t  },\r\n\t\t  body: JSON.stringify({\r\n\t\t      'username': 'utmgroup02@noreply.com',\r\n\t\t      'password': 'teamh2o'\r\n    \t\t})\r\n\t\t}).then(response=>response.json())\r\n    \t.then(result => {\r\n    \t\tthis.xpandGetData(result[\"X-IoT-JWT\"], accessToken, parameter, data);\r\n    \t});\r\n\t}\r\n\r\n\txpandGetData(jwt, accessToken, parameter, data){\r\n\t\tvar baseURL = 'https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/datamgt/v1/user/devicehistory?';\r\n\t    var eventName = 'Try';\r\n\t    var deviceIds = '16492';\r\n\t    var noOfEvents = '7';\r\n\t    var zoneId = 'Asia%2FKuala_Lumpur';\r\n\t    // var startDate = '2018-08-09%2012%3A00%3A00'\r\n\t\tfetch(baseURL + 'eventName=' + eventName + '&deviceIds=' + deviceIds + '&noOfEvents=' + noOfEvents + '&zoneId=' + zoneId,\r\n\t\t{\r\n      \t\theaders: {\r\n      \t\t\t'Authorization': 'Bearer' + ' ' + accessToken, \r\n      \t\t\t'X-IoT-JWT': jwt\r\n    \t\t}\r\n    \t})\r\n    \t.then(response=>{\r\n    \t\tconsole.log(response);\r\n    \t\treturn response.json();\r\n    \t})\r\n    \t.then(result => {\r\n    \t\tconsole.log(result[deviceIds][0]);\r\n    \t\tvar temp = this.state.values;\r\n\r\n\t\t\tconsole.log(\"temp\", temp);\r\n\t\t\ttemp.conductivity = this.changeProgressDial(this.state.values.conductivity, result[deviceIds][0].conductivity / 6000 * 100);\r\n\t\t\ttemp.oxygen = this.changeProgressDial(this.state.values.oxygen, result[deviceIds][0].oxygen / 8.8 * 100);\r\n\t\t\ttemp.tds = this.changeProgressDial(this.state.values.tds, result[deviceIds][0].tds / 3500 * 100);\r\n\t\t\ttemp.turbidity = this.changeProgressDial(this.state.values.turbidity, result[deviceIds][0].turbidity / 50 * 100);\r\n\t\t\ttemp.ph = this.changeProgressDial(this.state.values.ph, (result[deviceIds][0].ph - 5) / 9 * 100);\r\n\t\t\ttemp.temperature = this.changeProgressDial(this.state.values.temperature, (result[deviceIds][0].temperature - 16) / 24 * 100);\r\n\r\n\t\t\t// for (var i = value.length - 1; i >= 0; i--) {\r\n\t\t\t// \tthis.changeProgressDial(this.state.valuevalue[i]\r\n\t\t\t// }\r\n\t\t\t\t\r\n\t\t\t// this.setState({values: temp});\r\n    \t\tthis.setState({\r\n    \t\t\t\tvalues: temp,\r\n    \t\t\t\tresponse: result[deviceIds],\r\n    \t\t\t\tisLoading: false\r\n    \t\t\t});\r\n    \t});\r\n\t}\r\n}\r\n\r\nexport default Monitor;","import React, { Component } from \"react\";\r\n\r\nclass TextBorder extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          border: \"2px \" + this.props.borderColor + \" solid\",\r\n          color: this.props.textColor,\r\n          margin: \"1vh 2.5vw\"\r\n        }}\r\n      >\r\n        <h4>{this.props.text}</h4>\r\n        <h4>{this.props.count}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextBorder;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport ReactMapboxGl, { Layer, Feature, Popup, Marker } from \"react-mapbox-gl\";\r\nimport TextBorder from \"./TextBorder\";\r\n\r\n// ES5\r\n// var ReactMapboxGl = require('react-mapbox-gl');\r\n// var Layer = ReactMapboxGl.Layer;\r\n// var Feature = ReactMapboxGl.Feature;\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoibG9vaWtpYW5zZW5nIiwiYSI6ImNqdWF3MzFrMzA2bmYzeXBkMGdkMTdsM2sifQ.SMkjjzrxv1Gwmf127YmGpA\"\r\n});\r\n\r\nconst center = [103.6715, 1.5177];\r\nconst zoom = [7];\r\n\r\nexport const HomeComp = () => {\r\n  let routeHistory = useHistory();\r\n\r\n  const [location, setLocation] = useState({\r\n    location: [\r\n      {\r\n        lat: 1.5177,\r\n        lon: 103.6715,\r\n        name: \"JB Sutera Mall\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\",\r\n        response: []\r\n        // marker: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"color\")\"marker\",\r\n        // text: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 3.172788,\r\n        lon: 101.719556,\r\n        name: \"5G Ericsson KL\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"\",\r\n        response: []\r\n        // marker: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"color\")\"marker\",\r\n        // text: indicate(float(xp.get_xpand(\"wqi\", \"data\")), \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 1.555145,\r\n        lon: 103.63764,\r\n        name: \"UTM JB Lake\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 1.460468,\r\n        lon: 103.940487,\r\n        name: \"Sungai Kim Kim\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(0, \"color\")\"marker\",\r\n        // text: indicate(0, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 3.828111,\r\n        lon: 103.265507,\r\n        name: \"Sungai Tiram\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(30, \"color\")\"marker\",\r\n        // text: indicate(30, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 2.892086,\r\n        lon: 101.68903,\r\n        name: \"Sungai Langat\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Safe\"\r\n        // marker: indicate(30, \"color\")\"marker\",\r\n        // text: indicate(30, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 3.496129,\r\n        lon: 102.912493,\r\n        name: \"Sungai Pahang\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Extremely Polluted\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 2.235268,\r\n        lon: 102.256568,\r\n        name: \"Sungai Malacca\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Polluted\"\r\n        // marker: indicate(0, \"color\")\"marker\",\r\n        // text: indicate(0, \"text\")\"text\"\r\n      },\r\n      {\r\n        lat: 4.370342,\r\n        lon: 101.072384,\r\n        name: \"Sungai Kinta\",\r\n        type: \"scattermapbox\",\r\n        mode: \"markers\",\r\n        state: \"Polluted\"\r\n        // marker: indicate(40, \"color\")\"marker\",\r\n        // text: indicate(40, \"text\")\"text\"\r\n      }\r\n    ]\r\n  });\r\n  const [popup, setPopup] = useState(false);\r\n  const [popupText, setPopupText] = useState(\"\");\r\n  const [response, setResponse] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(0);\r\n  const [safeCount, setSafeCount] = useState(0);\r\n  const [pollutedCount, setPollutedCount] = useState(0);\r\n  const [extremelyPollutedCount, setExtremelyPollutedCount] = useState(0);\r\n  function get_xpand(parameter, mode) {\r\n    fetch(\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/applicationmgt/authenticate\",\r\n      {\r\n        headers: {\r\n          \"X-Secret\":\r\n            \"UmNvalVjX09Td2JtY0NHTE9ST3AyNFdpbUdrYTpyTXRQaVNOVzNsTEhHaEREWDZSbFRmYjM0bVVh\",\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        xpandGetJWT(result.access_token, parameter, mode);\r\n      });\r\n  }\r\n\r\n  function xpandGetJWT(accessToken, parameter, mode, data) {\r\n    fetch(\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/usermgt/v1/authenticate\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer\" + \" \" + accessToken\r\n        },\r\n        body: JSON.stringify({\r\n          username: \"utmgroup02@noreply.com\",\r\n          password: \"teamh2o\"\r\n        })\r\n      }\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        xpandGetData(result[\"X-IoT-JWT\"], accessToken, parameter, data);\r\n      });\r\n  }\r\n\r\n  function xpandGetData(jwt, accessToken, parameter, data) {\r\n    var baseURL =\r\n      \"https://cors-anywhere.herokuapp.com/https://iot.xpand.asia/developer/api/datamgt/v1/user/devicehistory?\";\r\n    var eventName = \"Try\";\r\n    var deviceIds = \"16492\";\r\n    var noOfEvents = \"7\";\r\n    var zoneId = \"Asia%2FKuala_Lumpur\";\r\n    // var startDate = '2018-08-09%2012%3A00%3A00'\r\n    fetch(\r\n      baseURL +\r\n        \"eventName=\" +\r\n        eventName +\r\n        \"&deviceIds=\" +\r\n        deviceIds +\r\n        \"&noOfEvents=\" +\r\n        noOfEvents +\r\n        \"&zoneId=\" +\r\n        zoneId,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer\" + \" \" + accessToken,\r\n          \"X-IoT-JWT\": jwt\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(result => {\r\n        console.log(\"result: \", result[deviceIds][0]);\r\n        setResponse(result[deviceIds]);\r\n        setIsLoading(false);\r\n        let temp = location;\r\n        temp.location.forEach(element => {\r\n          if (element.name === \"5G Ericsson KL\") {\r\n            element.state =\r\n              result[deviceIds][0][\"wqi\"] >= 40\r\n                ? \"Safe\"\r\n                : result[deviceIds][0][\"wqi\"] >= 30\r\n                ? \"Polluted\"\r\n                : \"Extremely Polluted\";\r\n          }\r\n        });\r\n        setLocation(temp);\r\n        let safeCountTemp = 0,\r\n          pollutedCountTemp = 0,\r\n          extremelyPollutedCountTemp = 0;\r\n\r\n        location.location.forEach(element => {\r\n          console.log(element.name, element.state);\r\n          element.state === \"Safe\"\r\n            ? safeCountTemp++\r\n            : element.state === \"Polluted\"\r\n            ? pollutedCountTemp++\r\n            : extremelyPollutedCountTemp++;\r\n        });\r\n        setSafeCount(safeCountTemp);\r\n        setPollutedCount(pollutedCountTemp);\r\n        setExtremelyPollutedCount(extremelyPollutedCountTemp);\r\n      });\r\n  }\r\n\r\n  function createLayer() {\r\n    let layer = [];\r\n    let color = \"\";\r\n    location.location.forEach(element => {\r\n      console.log(element.state);\r\n\r\n      if (element.state === \"Safe\") {\r\n        color = \"green\";\r\n      } else if (element.state === \"Polluted\") {\r\n        color = \"blue\";\r\n      } else {\r\n        color = \"red\";\r\n      }\r\n\r\n      console.log(color);\r\n      layer.push(\r\n        <Marker\r\n          properties={{\r\n            description: \"<strong>\" + element.name + \"</strong>\"\r\n          }}\r\n          coordinates={[element.lon, element.lat]}\r\n          anchor=\"bottom\"\r\n          onClick={mapWithEvt => {\r\n            console.log(\"mouse click\", mapWithEvt);\r\n            routeHistory.push(\"/monitor\");\r\n          }}\r\n          onMouseEnter={mapWithEvt => {\r\n            console.log(\"mouse enter\", mapWithEvt);\r\n\r\n            setPopup({\r\n              lat: element.lat,\r\n              lon: element.lon,\r\n              description: \"<strong>\" + element.name + \"</strong>\"\r\n            });\r\n          }}\r\n          onMouseLeave={mapWithEvt => {\r\n            console.log(\"mouse leave\", mapWithEvt);\r\n            setPopup(false);\r\n          }}\r\n        >\r\n          {/* <img src={markerUrl} /> */}\r\n          {/* condition = {element.state === \"Safe\"}; */}\r\n\r\n          <div\r\n            style={{\r\n              zIndex: 1000,\r\n              width: 1 + \"em\",\r\n              height: 1 + \"em\",\r\n              backgroundColor: color,\r\n              borderRadius: 50 + \"%\"\r\n            }}\r\n          ></div>\r\n        </Marker>\r\n        // )}\r\n        // />\r\n      );\r\n    });\r\n    console.log(layer);\r\n    return layer;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(typeof location);\r\n    // get_xpand();\r\n  }, []);\r\n\r\n  const row = {\r\n    display: \"flex\"\r\n  };\r\n\r\n  const column = {\r\n    width: \"33.33%\"\r\n  };\r\n\r\n  const borderDiv = {\r\n    border: \"2px black solid\",\r\n    margin: \"1vh 2.5vw\"\r\n  };\r\n\r\n  const mapContainer = {\r\n    border: \"5px orange solid\",\r\n    display: \"-webkit-inline-box\"\r\n  };\r\n\r\n  const title = {\r\n    fontFamily: \"Comic Sans MS\",\r\n    fontSize: \"1em\",\r\n    textAlign: \"left\",\r\n    paddingLeft: \"1.5em\"\r\n  };\r\n\r\n  return isLoading ? (\r\n    <div>Loading Data...</div>\r\n  ) : (\r\n    <div>\r\n      <h3 style={title}>\r\n        Number of river spot according to the pollution level\r\n      </h3>\r\n      <div style={row}>\r\n        <div style={column}>\r\n          <TextBorder\r\n            textColor=\"green\"\r\n            borderColor=\"green\"\r\n            text=\"SAFE\"\r\n            count={safeCount}\r\n          />\r\n        </div>\r\n        <div style={column}>\r\n          <TextBorder\r\n            textColor=\"blue\"\r\n            borderColor=\"blue\"\r\n            text=\"POLLUTED\"\r\n            count={pollutedCount}\r\n          />\r\n        </div>\r\n        <div style={column}>\r\n          <TextBorder\r\n            textColor=\"red\"\r\n            borderColor=\"red\"\r\n            text=\"EXTREMELY POLLUTED\"\r\n            count={extremelyPollutedCount}\r\n          />\r\n        </div>\r\n      </div>\r\n      <h3 style={title}>Location of devices in Malaysia</h3>\r\n\r\n      <div style={mapContainer}>\r\n        <Map\r\n          zoom={zoom}\r\n          style=\"mapbox://styles/mapbox/streets-v9\"\r\n          containerStyle={{\r\n            height: \"65vh\",\r\n            width: \"95vw\",\r\n            display: \"table-cell\"\r\n          }}\r\n          center={center}\r\n          onClick={(map, e) => console.log(\"onClickMap!\", e.lngLat)}\r\n        >\r\n          {popup ? (\r\n            <Popup\r\n              coordinates={[popup.lon, popup.lat]}\r\n              offset={{\r\n                \"bottom-left\": [12, 0],\r\n                bottom: [0, -10],\r\n                \"bottom-right\": [-12, -38]\r\n              }}\r\n            >\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: popup.description\r\n                }}\r\n              />\r\n            </Popup>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {createLayer()}\r\n        </Map>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeComp;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Monitor from \"./Monitor\";\nimport HomeComp from \"./HomeComp\";\nimport logo from \"./images/favicon.png\";\n\nfunction App() {\n  const navbar_style = {\n    backgroundColor: \"blue\",\n    justifyContent: \"flexStart !important\",\n    position: \"relative\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    // justify-content: \"space-between\",\n    padding: \".5rem 1rem\"\n  };\n\n  const logoDiv = {\n    width: \"60%\",\n    color: \"white\",\n    textAlign: \"left\",\n    paddingLeft: \"5em\"\n  };\n\n  const buttonDiv = {\n    width: \"40%\"\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"\" style={navbar_style}>\n          <div style={logoDiv}>\n            <img src={logo} style={{ width: 2 + \"em\" }} alt=\"Water logo\" />\n            <span>Hydro Health On-demand</span>\n          </div>\n          <div style={buttonDiv}>\n            <Link className=\"btn btn-success mx-2\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"btn btn-success mx-2\" to=\"monitor\">\n              Monitor\n            </Link>\n          </div>\n        </div>\n        <Route exact path=\"/\" component={HomeComp} />\n\n        <Route path=\"/monitor\" component={Monitor} />\n      </Router>\n      {/*  <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <div className=\"\">\n      <input className=\"btn\" type=\"button\"/>\n      </div>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}